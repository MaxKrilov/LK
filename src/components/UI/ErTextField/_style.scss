.er-text-field,
.er-textarea {
  > .er-input__control {
    > .er-input__slot {
      height: 40px;
      border: 1px solid rgba(map_get($shades, 'black'), 0.2);
      border-radius: 12px;
      padding: 0 13px;
      transition: $primary-transition;
      cursor: text;
      background: map_get($shades, 'transition');
      > .er-input__prepend-inner,
      > .er-input__append-inner {
        color: rgba(0, 0, 0, 0.2);
        transition: $primary-transition;
      }
      @include media-query((
              height: (xl: 48px)
      ));
      &:hover {
        border-color: map_get($shades, 'black');
        background: map_get($shades, 'white');
        > .er-input__prepend-inner,
        > .er-input__append-inner {
          color: map_get($yellow, 'base');
        }
      }
    }
    > .er-messages {
      text-align: right;
      color: map_get($red, 'base');
    }
  }
  &__slot {
    display: flex;
    flex: 1 1 auto;
    position: relative;
    input,
    label,
    textarea {
      @extend %body-font;
    }
    input,
    textarea {
      width: 100%;
      height: 100%;
      border: none;
      outline: none;
      color: rgba(map_get($shades, 'black'), 0.8);
      background: map_get($shades, 'transparent');
    }
    label {
      position: absolute;
      color: rgba(map_get($shades, 'black'), 0.5);
      pointer-events: none;
      transition: $primary-transition;
      transform-origin: left;
      height: 20px;
      left: 0;
      white-space: nowrap;
      text-overflow: ellipsis;
      max-width: 100%;
      overflow: hidden;

      &.er-text-field,
      &.er-textarea {
        &--active {
          transform: scale(0.85) translateY(-37px);
          max-width: 133%;
          @include media-query((
            transform: (
              md: scale(0.85) translateY(-36px),
              lg: scale(0.85) translateY(-45px)
            )
          ));
        }
      }
    }
  }
  &__success-icon {
    position: absolute;
    right: 0;
    top: -35px;
    svg {
      width: 16px;
      color: map_get($green, 'base');
    }
  }
  &__changed {
    position: absolute;
    right: 0;
    top: -35px;
    &-icon {
      svg {
        width: 16px;
        color: map_get($green, 'base');
      }
    }
    &-text {
      padding-left: 2px;
      color: map_get($green, 'base');
      font-size: 12px
    }
  }
  &--focus {
    > .er-input__control {
      > .er-input__slot {
        &,
        &:hover {
          border-color: map_get($yellow, 'base');
          background: map_get($shades, 'white');
        }
        > .er-input__prepend-inner,
        > .er-input__append-inner {
          color: map_get($yellow, 'base');
        }
      }
    }
  }
  &--disabled {
    > .er-input__control {
      > .er-input__slot {
        &,
        &:hover,
        &:active {
          border-color: rgba(map_get($shades, 'black'), 0.2);
          cursor: not-allowed;
          background: map_get($shades, 'transparent');
          > .er-input__prepend-inner,
          > .er-input__append-inner {
            &,
            &:hover,
            &:active {
              color: rgba(map_get($shades, 'black'), 0.2);
              background: map_get($shades, 'transparent');
            }
          }
          > .er-text-field__slot,
          > .er-select__slot {
            input {
              cursor: not-allowed;
              background: map_get($shades, 'transparent');
            }
          }
        }
      }
    }
  }
  &--error {
    > .er-input__control {
      > .er-input__slot {
        &,
        &:hover {
          border-color: map_get($red, 'base');
        }
        > .er-text-field__slot {
          > label {
            color: map_get($red, 'base');
            animation: shake 600ms map_get($transition, swing);
          }
        }
      }
    }
  }
  &--success {
    > .er-input__control {
      > .er-input__slot {
        &,
        &:hover {
          border-color: map_get($green, 'base');
        }
      }
    }
  }
  &--changed {
    > .er-input__control {
      > .er-input__slot {
        &,
        &:hover {
          border-color: map_get($green, 'base');
        }
      }
    }
  }
  &--required {
    position: relative;
    &:before {
      background-color: map_get($yellow, 'base');
      border-radius: 50%;
      content: '';
      height: 8px;
      width: 8px;
      position: absolute;
      top: -16px;
      left: 0px;
    }
  }
}
