.main-content {
  /*
    выравнивает основной контент относительно бокового меню
    не должен иметь padding - за это отвечают вложенные блоки
    например .main-content--padding

    Пример:
      div.main-content.main-content--padding
    Или
      div.main-content
        div.main-content--padding

    Для отступа от верхнего меню используется модификатор .main-content--top-menu-fix
    Пример:
      div.main-content.main-content--top-menu-fix
  */
  @extend %main-content-width;
  @extend %margin-left--menu-width;

  &--left-padding {
    @include content-padding('left');
  }

  &--right-padding {
    @include content-padding('right');
  }

  &--top-padding {
    padding-top: 105px;

    @include min-breakpoint('md') {
      padding-top: 112px;
    }

    @include min-breakpoint('lg') {
      padding-top: 120px;
    }
    //@include content-padding('top');
  }

  &--padding {
    @include content-padding(); // all paddings
  }

  &--x-padding,
  &--h-padding  // Horisontal padding
  {
    @include content-padding('left');
    @include content-padding('right');
  }

  &--y-padding,
  &--v-padding  // Vertical padding
  {
    @include content-padding('top');
    @include content-padding('bottom');
  }

  &--top-menu-fix {
  }

  &--content {
    margin-right: 16px;
    margin-left: 16px;
    max-width: 1040px;

    @include min-breakpoint('md') {
      margin-right: 24px;
      margin-left: 24px;
    }

    @include min-breakpoint('lg') {
      margin-right: 48px;
      margin-left: 48px;
    }

    @include min-breakpoint('xl') {
      margin-right: auto;
      margin-left: auto;
    }
  }
}

.wide-content {
  width: 100%;
}

.columns {
  display: flex;
  flex-direction: row;

  .column {
    flex-grow: 1;

    &--left,
    &--right {
      flex-grow: 0;
    }

    &--left { // .column--left сохраняет место для отображения бокового меню
      @include min-breakpoint('xl') {
        width: $left-menu-width;
        min-width: $left-menu-width;
        flex-basis: $left-menu-width;
      }

      @include media-min-width( ($left-menu-width * 2) + $content-max-width ) {
        max-width: calc( calc(100vw - #{$content-max-width}) / 2);
        width: calc( calc(100vw - #{$content-max-width}) / 2);
        flex-basis: calc( calc(100vw - #{$content-max-width}) / 2);
      }
    }

    &--right {
      @include media-max-width( ($left-menu-width * 2) + $content-max-width ) {
        max-width: calc(100vw - #{$content-max-width} - #{$left-menu-width});
        width: calc(100vw - #{$content-max-width} - #{$left-menu-width});
      }
    }
  }
}


.big-space {
  padding-top: $padding-x40;

  &--debug { // Отображается как в макете фиолетовым квадратом
    position: relative;
    background-color: rgba($big-space-color, .3);
    width: $padding-x40;

    &::before {
      content: "160";
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      @include color-black(.3);
    }
  }
}
