@mixin media-query ($properties, $breakpoints: $grid-breakpoint) {
  @each $property, $values in $properties {
    @each $breakpoint, $value in $values {
      @media screen and (min-width: map_get($breakpoints, $breakpoint)) {
        #{$property}: $value;
      }
    }
  }
}


@mixin media-min-width($size) {
  /*
    Usage:
    .devil {
      display: none;

      @include media-min-width(666px) {
        display: block;
      }
    }
  */
  @media screen and (min-width: $size) {
    @content;
  }
}

@mixin media-max-width($size) {
  /*
    Usage:

    body {
      @include media-max-width(240px) {
        display: none;
      }
    }
  */
  @media screen and (max-width: $size) {
    @content;
  }
}

@mixin min-breakpoint($breakpoint, $list-breakpoint: $grid-breakpoint) {
  /*
    $breakpoint is 'xs', 'sm', 'lg' or etc

    Usage:
    .my-class {
      @include min-breakpoint('sm') {
        // some styles for 'sm' media query
      }
    }
  */
  @include media-min-width(map_get($list-breakpoint, $breakpoint)) {
    @content;
  }
}


@mixin max-breakpoint($breakpoint, $list-breakpoint: $grid-breakpoint) {
  /*
    $breakpoint is 'xs', 'sm', 'lg' or etc

    Usage:
    .my-class {
      @include max-breakpoint('sm') {
        // some styles for max-width: 'sm' media query
      }
    }
  */

  /*
    Медиазапрос max-width это "меньше или равно",
    поэтому отнимаем пиксель что-бы не было пересечений с
    аналогичным значением min-width
  */
  $max-width: map_get($list-breakpoint, $breakpoint) - .1px;

  @include media-max-width($max-width) {
    @content;
  }
}
