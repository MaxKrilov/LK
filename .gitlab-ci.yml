before_script:
#
# System
#
    - export BUILD_DIR='/var/www/builds'
    - export BUILD_HOST='t2.ertelecom.ru'
    - export REGISTRY_ADDRESS="harbor.ertelecom.ru"
    - export LOG_DIR='/var/log/services/nginx'
#
# USER
#
    - export PROJECT_NAME=`basename ${CI_PROJECT_DIR}|sed s/\\\./-/`
    - export PROJECT_GROUP=`echo ${CI_PROJECT_DIR} | awk -F'/' '{print $(NF-1)}' | tr 'A-Z' 'a-z' | tr '_' '-'`
    - export COMPOSE_PROJECT_NAME=$(echo ${PROJECT_GROUP}${PROJECT_NAME}${CI_BUILD_REF_NAME}|sed -e 's/[^A-Z,a-z,0-9]//g')
    - export FQDN=${CI_BUILD_REF_NAME}.${PROJECT_NAME}.${PROJECT_GROUP}.${BUILD_HOST}
    - export PROJECT_DIR_SUFFIX=${PROJECT_GROUP}/${PROJECT_NAME}/${CI_BUILD_REF_NAME}
    - export PROJECT_DIR=${BUILD_DIR}/${PROJECT_DIR_SUFFIX}
    - export CONTAINER_PORT=40037
    - export IMAGE_ADDRESS="${REGISTRY_ADDRESS}/${PROJECT_GROUP}/${PROJECT_NAME}:${CI_COMMIT_REF_NAME}"
    - export ADD_GROUP="groupadd -g $(id -g) group"
    - export ADD_USER="useradd -u $(id -u) -g $(id -g) -d /app user"
    - export INSTALL_DEPS="su user -c \"npm install --quiet\""
    - export BUILD="su user -c \"npm run build\""
    - export CONTENT_FILES_DIR=/var/shared/b2bweb/lk-admin/master/files
    - export CONTAINER_FILES_DIR=/static/files

stages:
    - build_dev_image     # Сборка образа для dev
    - deploy_dev_image    # Развёртывание образа для dev
    - build_prod_image    # Сборка образа для prod
    - save_dhub           # Размещение в магазине приложений
    - staging_cc4
    - deploy_on_kuber_cc1
    - deploy_on_kuber_cc3 # Развёртывание в продакшне

Build Dev Image:
    stage: build_dev_image
    script:
        - mkdir -p config
        - consul-template -once -template "build_env/nginx_container/default.ctmpl:build_env/nginx_container/default.conf"
        - export WEBSERVER_IMAGE="nginx:1.14.0"
        - docker run --rm -v $PWD:/app -w /app node:carbon bash -c "$ADD_GROUP && $ADD_USER && $INSTALL_DEPS && $BUILD"
        - envsubst < build_env/docker-compose/Dockerfile.tmpl > Dockerfile
        - docker build --tag ${IMAGE_ADDRESS} .
    tags:
        - build.hq
    except:
        - tags

Deploy dev:
    stage: deploy_dev_image
    script:
        - mkdir -p config
        - mkdir -p ${CONTENT_FILES_DIR}
        - chmod 777 ${CONTENT_FILES_DIR}
        
        - export STAGE=development
        - envsubst < build_env/docker-compose/docker-compose.tmpl > config/docker-compose.yml

        - cd config
        - docker-compose up -d

        - cd ..
        - envsubst < build_env/consul-template.tmpl > config/consul-template.conf

        - mkdir -p --verbose ${PROJECT_DIR}/config
        - mkdir -p ${LOG_DIR}/${PROJECT_DIR_SUFFIX}/

        - if $(consul-template -once -config config/consul-template.conf); then :; else rm ${PROJECT_DIR}/config/site.cfg && nginx_test_failed > /dev/null 2>&1; fi
    except:
        - tags
    tags:
        - build.hq

Build Production Image:
    stage: build_prod_image
    script:
        - mkdir -p config

        - consul-template -once -template "build_env/nginx_container/default.ctmpl:build_env/nginx_container/default.conf"

        - export WEBSERVER_IMAGE="nginx:1.14.0"

        - docker run --rm -v $PWD:/app -w /app node:carbon bash -c "$ADD_GROUP && $ADD_USER && $INSTALL_DEPS && $BUILD"

        - envsubst < build_env/docker-compose/Dockerfile.tmpl > Dockerfile

        - docker build --tag ${IMAGE_ADDRESS} .
    only:
        - /^\d+\.\d+\.\d+$/
    tags:
        - build.hq

Save dhub:
    stage: save_dhub
    dependencies:
        - Build Production Image
    script:
        - docker push ${IMAGE_ADDRESS}
    tags:
        - build.hq
    only:
        - /^\d+\.\d+\.\d+$/

.job_template: &k8s_deployment
    image: harbor.ertelecom.ru/devops/kubectl:1.16.3
    script:
        - export FULL_PROJECT_NAME=$(echo ${PROJECT_GROUP}-${PROJECT_NAME}|sed -e 's/\W//g')
        - helm repo add base-images http://harbor.ertelecom.ru/chartrepo/base-images
        - envsubst < build_env/values.yaml.template > build_env/values.yaml
        - helm upgrade -i ${FULL_PROJECT_NAME} --values build_env/values.yaml base-images/deploy -n ${NAMESPACE}
        - helm list
    only:
        - /^\d+\.\d+\.\d+$/

Deploy on staging cc4:
    stage: staging_cc4
    variables:
        DOMAIN: newlkb2b.t4.ertelecom.ru
        NAMESPACE: staging
        tlsSecret: wildcard-t4
        COOKIE_DOMAIN: '.t4.ertelecom.ru'
    <<: *k8s_deployment
    when: manual
    tags:
        - k8s-st-cc4-staging


Deploy on cc1:
    stage: deploy_on_kuber_cc1
    variables:
        DOMAIN: newlkb2b.domru.ru
        NAMESPACE: b2bweb-prod
        tlsSecret: wildcard-domru-ru
        COOKIE_DOMAIN: '.domru.ru'
    <<: *k8s_deployment
    when: manual
    tags:
        - k8s-cc1-b2bweb-prod

Deploy on cc3:
    stage: deploy_on_kuber_cc3
    variables:
        DOMAIN: newlkb2b.domru.ru
        NAMESPACE: b2bweb-prod
        tlsSecret: wildcard-domru-ru
        COOKIE_DOMAIN: '.domru.ru'
    <<: *k8s_deployment
    when: manual
    tags:
        - k8s-cc3-b2bweb-prod
